version: '3.8'

services:
  # PostgreSQL Database
  db:
    image: postgres:15
    environment:
      POSTGRES_DB: marketplace_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    volumes:
      - postgres_data_marketplace:/var/lib/postgresql/data
      - ./backend/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d marketplace_db"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - server

  # FastAPI Backend
  backend:
    image: python:3.11-slim
    environment:
      DATABASE_URL: postgresql://postgres:password@db:5432/marketplace_db
      SECRET_KEY: your-secret-key-change-in-production
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
      MERCADO_LIVRE_CLIENT_ID: 6987936494418444
      MERCADO_LIVRE_CLIENT_SECRET: puvG9Z7XBgICZg5yK3t0PAXAmnco18Tl
      MERCADO_LIVRE_REDIRECT_URI: https://adm.wolfx.com.br/api/mercado-livre/auth/callback
      ENVIRONMENT: production
    working_dir: /app
    volumes:
      - ./backend:/app
    command: sh -c "pip install -r requirements.txt && python -m uvicorn app.main:app --host 0.0.0.0 --port 8000"
    depends_on:
      - db
    networks:
      - server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`adm.wolfx.com.br`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=letsencryptresolver"
      - "traefik.http.routers.backend.priority=200"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"
      - "traefik.docker.network=server"

  # Frontend
  frontend:
    image: node:18-alpine
    working_dir: /app
    volumes:
      - .:/app
      - /app/node_modules
    command: sh -c "npm install && VITE_API_URL=https://adm.wolfx.com.br npm run build && cd dist && npx serve -s . -l 3000"
    networks:
      - server
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`adm.wolfx.com.br`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=letsencryptresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"
      - "traefik.docker.network=server"

volumes:
  postgres_data_marketplace:

networks:
  server:
    external: true
    name: server
